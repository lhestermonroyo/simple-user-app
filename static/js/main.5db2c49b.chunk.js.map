{"version":3,"sources":["components/Header/index.tsx","components/ListError/index.tsx","components/ListLoading/index.tsx","components/SearchUser/index.tsx","utils/avatarGenerator.ts","components/Avatar/index.tsx","components/UserDetails/index.tsx","components/ListEmpty/index.tsx","utils/carouselUtil.ts","components/UsersList/index.tsx","utils/searchUtil.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","viewType","setViewType","className","title","onClick","AppstoreFilled","IdcardFilled","ListError","errorMsg","ExclamationCircleFilled","ListLoading","loading","LoadingOutlined","SearchUser","searchVal","setSearchVal","SearchOutlined","type","placeholder","value","onChange","e","target","getFirstLetter","name","charAt","colorGenerator","color","i","Math","floor","random","Avatar","nameInitial","avatarGenerator","style","background","UserDetails","userDetails","email","href","MailOutlined","phone","PhoneOutlined","username","ListEmpty","FrownOutlined","handleLeftDir","currentUser","userArrCount","handleRightDir","UsersList","useState","setLoading","error","setError","users","setUsers","searchResults","setSearchResults","setCurrentUser","useEffect","handleFetchUsers","handleSearch","a","fetch","then","res","ok","json","Promise","reject","data","catch","err","console","log","handleKeyPress","stopPropagation","key","handleCarousel","results","userArr","loweredSearchVal","toLowerCase","filter","user","toLocaleLowerCase","includes","searchUtil","window","addEventListener","removeEventListener","dir","newCurrentUser","carouselUtil","length","map","LeftOutlined","RightOutlined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db2c49b.chunk.js","sourcesContent":["import React from 'react';\nimport { AppstoreFilled, IdcardFilled } from '@ant-design/icons';\n\ntype HeaderProps = {\n  viewType: 'Cards' | 'Carousel';\n  setViewType: (viewType: 'Cards' | 'Carousel') => void;\n};\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const { viewType, setViewType } = props;\n\n  return (\n    <div className='header'>\n      <div className='header-container'>\n        <p className='header-title'>Users List</p>\n        <button\n          title={`View as ${viewType === 'Carousel' ? 'Cards' : 'Carousel'}`}\n          className='header-button'\n          onClick={() =>\n            setViewType(viewType === 'Carousel' ? 'Cards' : 'Carousel')\n          }\n        >\n          {viewType === 'Carousel' ? (\n            <AppstoreFilled className='header-button-icon' />\n          ) : (\n            <IdcardFilled className='header-button-icon' />\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\n\ntype ListErrorProps = {\n  errorMsg: string;\n};\n\nconst ListError = (props: ListErrorProps) => {\n  const { errorMsg } = props;\n  return (\n    <div className=\"users-list\">\n      <div className=\"list-loading\">\n        <ExclamationCircleFilled className=\"list-loading-icon\" />\n        <p>{errorMsg}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ListError;\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\n\ntype ListLoadingProps = {\n  loading: boolean;\n};\n\nconst ListLoading = (props: ListLoadingProps) => {\n  const { loading } = props;\n\n  if (loading) {\n    return (\n      <div className=\"users-list\">\n        <div className=\"list-loading\">\n          <LoadingOutlined className=\"list-loading-icon\" />\n          <p>Loading list, please wait...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default ListLoading;\n","import React from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\n\ntype SearchUserProps = {\n  searchVal: string;\n  setSearchVal: (val: string) => void;\n};\n\nconst SearchUser = (props: SearchUserProps) => {\n  const { searchVal, setSearchVal } = props;\n\n  return (\n    <div className='search'>\n      <div className='search-container'>\n        <SearchOutlined className='search-icon' />\n        <input\n          type='search'\n          placeholder=\"Search user's name, email or username...\"\n          value={searchVal}\n          onChange={(e) => setSearchVal(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchUser;\n","export const avatarGenerator = (name: string) => {\n  return {\n    nameInitial: getFirstLetter(name),\n    color: colorGenerator(),\n  };\n};\n\nconst getFirstLetter = (name: string) => {\n  return name.charAt(0);\n};\n\nconst colorGenerator = () => {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n","import React from 'react';\nimport { avatarGenerator } from '../../utils/avatarGenerator';\n\ntype AvatarProps = {\n  name: string;\n};\n\nconst Avatar = (props: AvatarProps) => {\n  const { name } = props;\n\n  const { nameInitial, color } = avatarGenerator(name);\n\n  return (\n    <div className=\"avatar\" style={{ background: color }}>\n      <p>{nameInitial}</p>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport Avatar from '../Avatar';\nimport { MailOutlined, PhoneOutlined } from '@ant-design/icons';\n\ntype UserDetailsProps = {\n  userDetails: {\n    name: string;\n    username: string;\n    email: string;\n    phone: string;\n  };\n};\n\nconst UserDetails = (props: UserDetailsProps) => {\n  const { userDetails } = props;\n  return (\n    <div className='user-details-card'>\n      <div className='user-details-action'>\n        <a\n          title={`Send email to ${userDetails.email}`}\n          href={`mailto:${userDetails.email}`}\n        >\n          <MailOutlined className='user-details-action-icon' />\n        </a>\n        <a\n          title={`Call ${userDetails.phone}`}\n          href={`tel:+${userDetails.phone}`}\n        >\n          <PhoneOutlined className='user-details-action-icon' />\n        </a>\n      </div>\n      <Avatar name={userDetails.name} />\n      <h3>{userDetails.name}</h3>\n      <p>\n        <strong>{`@${userDetails.username}`}</strong>\n      </p>\n      <p>\n        {`${userDetails.email}`} &bull; {userDetails.phone}\n      </p>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","import React from 'react';\nimport { FrownOutlined } from '@ant-design/icons';\n\ntype ListEmptyProps = {\n  searchVal: string;\n};\n\nconst ListEmpty = (props: ListEmptyProps) => {\n  const { searchVal } = props;\n  return (\n    <div className=\"list-loading\">\n      <FrownOutlined className=\"list-loading-icon\" />\n      <p>\n        No results for <strong>{searchVal}</strong>.\n      </p>\n    </div>\n  );\n};\n\nexport default ListEmpty;\n","export const carouselUtil = (\n  dir: string,\n  currentUser: number,\n  userArrCount: number\n) => {\n  if (dir === 'left') {\n    return handleLeftDir(currentUser, userArrCount);\n  }\n\n  if (dir === 'right') {\n    return handleRightDir(currentUser, userArrCount);\n  }\n};\n\nconst handleLeftDir = (currentUser: number, userArrCount: number) => {\n  let userCount = userArrCount - 1;\n  if (currentUser !== 0) {\n    return currentUser - 1;\n  } else {\n    return userCount;\n  }\n};\n\nconst handleRightDir = (currentUser: number, userArrCount: number) => {\n  let userCount = userArrCount - 1;\n  if (currentUser !== userCount) {\n    return currentUser + 1;\n  } else {\n    return 0;\n  }\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport ListError from '../ListError';\nimport ListLoading from '../ListLoading';\nimport SearchUser from '../SearchUser';\nimport UserDetails from '../UserDetails';\nimport ListEmpty from '../ListEmpty';\nimport { searchUtil } from '../../utils/searchUtil';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport { carouselUtil } from '../../utils/carouselUtil';\n\ntype UsersListProps = {\n  viewType: 'Cards' | 'Carousel';\n};\n\nconst UsersList: React.FC<UsersListProps> = (props: UsersListProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchVal, setSearchVal] = useState<string>('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [searchResults, setSearchResults] = useState<any[] | null>(null);\n  const [currentUser, setCurrentUser] = useState<number>(0);\n\n  const { viewType } = props;\n\n  useEffect(() => {\n    handleFetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (searchVal) {\n      handleSearch(searchVal);\n    }\n  }, [searchVal]);\n\n  const handleFetchUsers = async () => {\n    setLoading(true);\n    await fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject(res);\n        }\n\n        return res.json();\n      })\n      .then((data) => {\n        setUsers(data);\n      })\n      .catch((err) => {\n        console.log('Error', err);\n        setError('An error occured while fetching users.');\n      });\n    setLoading(false);\n  };\n\n  const handleKeyPress = (e: KeyboardEvent) => {\n    e.stopPropagation();\n    if (e.key === 'ArrowLeft') {\n      handleCarousel('left');\n    }\n\n    if (e.key === 'ArrowRight' || e.key === 'Tab') {\n      handleCarousel('right');\n    }\n  };\n\n  const handleSearch = (searchVal: string) => {\n    const results = searchUtil(searchVal, users);\n    setSearchResults(results);\n  };\n\n  useEffect(() => {\n    if (viewType === 'Carousel') {\n      window.addEventListener('keyup', handleKeyPress);\n    }\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyPress);\n    };\n  }, [viewType, handleKeyPress]);\n\n  const handleCarousel = (dir: string) => {\n    let newCurrentUser = carouselUtil(dir, currentUser, users.length) as number;\n    setCurrentUser(newCurrentUser);\n  };\n\n  if (loading) {\n    return <ListLoading loading={loading} />;\n  }\n\n  if (error) {\n    return <ListError errorMsg={error} />;\n  }\n\n  return (\n    <div className=\"container\">\n      {viewType === 'Cards' ? (\n        <div className=\"users-list\">\n          <SearchUser searchVal={searchVal} setSearchVal={setSearchVal} />\n          {searchResults !== null && searchResults.length === 0 && (\n            <ListEmpty searchVal={searchVal} />\n          )}\n          <div className=\"users-list-container\">\n            {searchVal.length === 0\n              ? users.map((user, i) => {\n                  return <UserDetails key={i} userDetails={user} />;\n                })\n              : searchResults !== null &&\n                searchResults.map((user, i) => {\n                  return <UserDetails key={i} userDetails={user} />;\n                })}\n          </div>\n        </div>\n      ) : (\n        <div className=\"users-carousel-container\">\n          <button\n            className=\"left-control\"\n            onClick={() => handleCarousel('left')}\n          >\n            <LeftOutlined className=\"control-icon\" />\n          </button>\n          <UserDetails userDetails={users[currentUser]} />\n          <button\n            className=\"right-control\"\n            onClick={() => handleCarousel('right')}\n          >\n            <RightOutlined className=\"control-icon\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersList;\n","export const searchUtil = (searchVal: string, userArr: any[]) => {\n  const loweredSearchVal = searchVal.toLowerCase();\n\n  return userArr.filter(\n    (user) =>\n      user.name.toLocaleLowerCase().includes(loweredSearchVal) ||\n      user.email.toLocaleLowerCase().includes(loweredSearchVal) ||\n      user.username.toLowerCase().includes(loweredSearchVal)\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport UsersList from './components/UsersList';\n\nconst App: React.FC = () => {\n  const [viewType, setViewType] = useState<'Cards' | 'Carousel'>('Cards');\n\n  return (\n    <div>\n      <Header viewType={viewType} setViewType={setViewType} />\n      <UsersList viewType={viewType} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}